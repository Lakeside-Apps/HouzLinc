<local:DeviceListPageBase
    x:Class="HouzLinc.Views.Devices.DeviceListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctl="using:HouzLinc.Controls"
    xmlns:local="using:HouzLinc.Views.Devices"
    xmlns:links="using:HouzLinc.Views.Links"
    xmlns:vm="using:ViewModel.Devices"
    xmlns:utils="using:HouzLinc.Utils"
    xmlns:dlg="using:HouzLinc.Dialogs"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <win:Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition/>
        </TransitionCollection>
    </win:Page.Transitions>

    <Grid VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MasterColumn" Width="400"/>
            <ColumnDefinition x:Name="DetailColumn" Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Navigation header -->
        <Grid ColumnSpan="2" MinHeight="45">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Text="{x:Bind PageHeaderProperty}"
                VerticalAlignment="Top"
                Margin="10,0,0,0"
                Style="{StaticResource TitleTextBlockStyle}"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center">
                <Button
                    Tag="AddDevice"
                    win:ToolTipService.ToolTip="Add Device"
                    Margin="0,0,3,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}"
                    Click="AddDeviceBtnClick">
                    <SymbolIcon Symbol="Add"/>
                </Button>
                <Button
                    Tag="RemoveDevice"
                    Visibility="{x:Bind deviceListViewModel.IsItemPresented, Mode=OneWay}"
                    win:ToolTipService.ToolTip="Remove Device"
                    Margin="0,0,3,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}"
                    Click="RemoveDeviceBtnClick">
                    <SymbolIcon Symbol="Delete"/>
                </Button>
                <Button
                    Tag="More"
                    Visibility="{x:Bind deviceListViewModel.IsItemPresented, Mode=OneWay}"
                    win:ToolTipService.ToolTip="More Options"
                    Margin="0,0,3,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}">
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyoutItem Text="Force Sync Device" Click="{x:Bind deviceListViewModel.PresentedItem.ForceSyncDevice_Click}"/>
                            <MenuFlyoutItem Text="Check Connection Status" Click="{x:Bind deviceListViewModel.PresentedItem.ForceCheckDeviceConnectionStatus_Click}"/>
                            <MenuFlyoutItem Text="Remove Device" Click="{x:Bind deviceListViewModel.PresentedItem.RemoveDevice_Click}"/>
                            <MenuFlyoutItem Text="Replace Device" Click="{x:Bind deviceListViewModel.PresentedItem.ReplaceDevice_Click}"/>
                            <MenuFlyoutItem Text="Copy Device" Click="{x:Bind deviceListViewModel.PresentedItem.CopyDevice_Click}"/>
                            <MenuFlyoutItem Text="Remove Stale Controllers/Responders" Click="{x:Bind deviceListViewModel.PresentedItem.RemoveStaleLinks_Click}"/>
                            <MenuFlyoutItem Text="Remove Duplicate Controllers/Responders" Click="{x:Bind deviceListViewModel.PresentedItem.RemoveDuplicateLinks_Click}"/>
                            <MenuFlyoutItem Text="Ensure Hub is First Controller" Click="{x:Bind deviceListViewModel.PresentedItem.EnsureLinkToHubIsFirst_Click}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="More"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Filter and sort -->
        <StackPanel
            Grid.Row="1"
            Margin="10,0,0,5"
            Orientation="Horizontal"
            HorizontalAlignment="Left">
            <TextBlock Margin="0,0,5,4" Text="Room: " VerticalAlignment="Center"/>
            <ctl:ValueComboBox
                Margin="0,2,10,4"
                VerticalAlignment="Center"
                ItemsSource="{x:Bind deviceListViewModel.Rooms, Mode=OneWay}"
                Value="{x:Bind deviceListViewModel.RoomFilter, Mode=TwoWay}"/>
            <TextBlock Margin="0,0,5,4" Text="Sort by: " VerticalAlignment="Center"/>
            <ComboBox
                x:Name="SortOrderComboBox"
                Margin="0,2,0,4"
                VerticalAlignment="Center"
                ItemsSource="{x:Bind deviceListViewModel.SortOrders}"
                SelectedItem="{x:Bind deviceListViewModel.SortOrder, Mode=TwoWay}"/>
        </StackPanel>

        <!-- No device to show -->
        <StackPanel
            x:Name="EmptyListView"
            x:Load="{x:Bind deviceListViewModel.IsEmpty, Mode=OneWay}"
            Grid.Row="2"
            Margin="10,15,10,0">
            <StackPanel x:Name="HubNotFound" x:Load="{x:Bind settingsViewModel.IsHubNotFound}">
                <TextBlock TextWrapping="Wrap" Text="The hub was not found on your local network!"/>
                <TextBlock Margin="0,15,0,0">
                    <Span xml:space="preserve">Please <Hyperlink Click="NavigateToHubSettings">review the hub information</Hyperlink></Span>
                    .</TextBlock>
            </StackPanel>
            <StackPanel x:Name="HubFound" x:Load="{x:Bind settingsViewModel.IsHubFound}">
                <TextBlock TextWrapping="Wrap" Text="There is no device to show here yet! "/>
                <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" Text="You can add a device by tapping:"/>
                <Button
                    Tag="AddDevice"
                    win:ToolTipService.ToolTip="Add Device"
                    Margin="0,4,0,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}"
                    Click="AddDeviceBtnClick">
                    <SymbolIcon Symbol="Add"/>
                </Button>
                <TextBlock TextWrapping="Wrap">either here or at top right of this page.</TextBlock>
                <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
                    If you aleady have devices in your Insteon<Span xml:space="preserve"> network, <Hyperlink Click="{x:Bind toolsViewModel.ScheduleImportAllDevices}">try discovering them.</Hyperlink></Span>
                </TextBlock>
            </StackPanel>
        </StackPanel>

        <!-- Device List -->
        <ListView
            x:Name="DeviceListView"
            Visibility="{x:Bind deviceListViewModel.IsEmpty, Converter={StaticResource VisibilityNegation}, Mode=OneWay}"
            Grid.Row="2"
            Margin="5,0,5,2"
            EntranceNavigationTransitionInfo.IsTargetElement="True"
            IsItemClickEnabled="True"
            ItemClick="OnItemClick"
            ItemsSource="{x:Bind deviceListViewModel.Items, Mode=OneWay}"
            SelectedItem="{x:Bind SelectedItem, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.HorizontalScrollMode="Enabled"
            ItemContainerStyle="{StaticResource CustomListViewItemExpanded}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:DeviceViewModel">
                    <Grid PointerEntered="{x:Bind PointerEntered}" PointerExited="{x:Bind PointerExited}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- - Canvas is necessary for PointerEntered/Exited to cover the whole item area -->
                        <Canvas
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent"/>
                        <Ellipse
                            x:Name="Ellipse"
                            Grid.RowSpan="3"
                            Width="96"
                            Height="96"
                            Margin="6"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Fill="{StaticResource DeviceStampColor}"/>
                        <Image
                            Grid.RowSpan="3"
                            Width="72"
                            Height="72"
                            Margin="6"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Source="{x:Bind ModelIconPath_72x72, Mode=OneWay}"/>
                        <TextBlock
                            Grid.Column="1"
                            Text="{x:Bind DisplayName, Mode=OneWay}"
                            Style="{StaticResource BodyTextBlockStyle}"
                            FontWeight="Bold"
                            TextWrapping="NoWrap"
                            VerticalAlignment="Center"
                            Margin="12,12,0,0"/>
                        <TextBlock
                            Grid.Column="1"
                            Grid.Row="1"
                            Text="{x:Bind Room, Mode=OneWay}"
                            Style="{StaticResource BodyTextBlockStyle}"
                            TextWrapping="NoWrap"
                            VerticalAlignment="Center"
                            Margin="12,0,0,12"/>
                        <TextBlock
                            Grid.Column="1"
                            Grid.Row="2"
                            Text="{x:Bind DeviceIdInParens, Mode=OneWay}"
                            Style="{StaticResource CaptionTextBlockStyle}"
                            TextWrapping="NoWrap"
                            VerticalAlignment="Center"
                            Margin="12,0,0,8"/>
                        <ctl:LoadController
                            x:Name="LoadController"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Grid.RowSpan="3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Margin="10"
                            win:ToolTipService.ToolTip="Turn load on or off"
                            x:Load="{x:Bind IsOnOffButtonShown, Mode=OneWay}"
                            IsSliderVisible="False"
                            LoadFullOn="{x:Bind LightFullOn}"
                            LoadOn="{x:Bind LightOn}"
                            LoadOff="{x:Bind LightOff}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!-- Device detail -->
        <local:DeviceView
            x:Name="DeviceDetailsPresenter"
            Grid.Row="1"
            Grid.Column="1"
            Grid.RowSpan="2"
            Margin="10,0,10,20"
            Content="{x:Bind deviceListViewModel.PresentedItem, Mode=OneWay}"/>

        <!-- Footer -->
        <ctl:StatusBar
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Background="{ThemeResource AppBarBackgroundThemeBrush}"
            StatusText="{x:Bind StatusBarViewModel.StatusText, Mode=OneWay}"
            IsUserActionRequest="{x:Bind StatusBarViewModel.IsUserActionRequest, Mode=OneWay}"/>

        <!-- Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageSizeStatesGroup" CurrentStateChanged="OnCurrentStateChanged">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="960"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DeviceDetailsPresenter.Visibility" Value="Visible"/>
                        <Setter Target="MasterColumn.Width" Value="400"/>
                        <Setter Target="DetailColumn.Width" Value="*"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DeviceDetailsPresenter.Visibility" Value="Collapsed"/>
                        <Setter Target="MasterColumn.Width" Value="*"/>
                        <Setter Target="DetailColumn.Width" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="MasterDetailsStatesGroup">
                <VisualState x:Name="MasterState">
                    <VisualState.Setters>
                        <Setter Target="DeviceListView.SelectionMode" Value="None"/>
                        <Setter Target="DeviceListView.IsItemClickEnabled" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MasterDetailsState">
                    <VisualState.Setters>
                        <Setter Target="DeviceListView.SelectionMode" Value="Single"/>
                        <Setter Target="DeviceListView.IsItemClickEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</local:DeviceListPageBase>

