<!--
    Copyright 2022 Christian Fortini
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<local:HubChannelListPageBase
    x:Class="UnoApp.Views.Hub.HubChannelListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctl="using:UnoApp.Controls"
    xmlns:local="using:UnoApp.Views.Hub"
    xmlns:vm="using:ViewModel.Hub"
    xmlns:links="using:UnoApp.Views.Links"
    xmlns:utils="using:UnoApp.Utils"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <win:Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition/>
        </TransitionCollection>
    </win:Page.Transitions>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MasterColumn" Width="400"/>
            <ColumnDefinition x:Name="DetailColumn" Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Navigation header -->
        <Grid ColumnSpan="2" MinHeight="45">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Text="{x:Bind PageHeaderProperty}"
                VerticalAlignment="Top"
                Margin="10,0,0,0"
                Style="{StaticResource TitleTextBlockStyle}"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center">
                <Button
                    Grid.Column="3"
                    Margin="3,0,0,3"
                    VerticalAlignment="Bottom"
                    Style="{ThemeResource SplitViewPaneButtonStyle}">
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyoutItem Text="Update Hub" Click="{x:Bind hubChannelListViewModel.PresentedItem.ForceSyncDevice_Click}"/>
                            <MenuFlyoutItem Text="Remove Stale Controllers/Responders" Click="{x:Bind hubChannelListViewModel.PresentedItem.RemoveStaleLinks_Click}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="More"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Sort -->
        <StackPanel
            Grid.Row="1"
            Margin="10,0,0,5"
            Orientation="Horizontal"
            HorizontalAlignment="Left">
            <TextBlock
                Grid.Column="1"
                Margin="0,0,5,4"
                Text="Sort by"
                VerticalAlignment="Center"/>
            <ComboBox
                Grid.Column="2"
                Margin="0,2,0,4"
                VerticalAlignment="Center"
                x:Name="SortOrderComboBox"
                ItemsSource="{x:Bind hubChannelListViewModel.SortOrders}"
                SelectedItem="{x:Bind hubChannelListViewModel.SortOrder, Mode=TwoWay}"/>
        </StackPanel>

        <!-- Hub is not discovered -->
        <StackPanel
            x:Name="EmptyListView"
            x:Load="{x:Bind settingsViewModel.IsHubNotFound, Mode=OneWay}"
            Grid.Row="2"
            Margin="10,15,10,0">
            <TextBlock TextWrapping="Wrap" Text="The hub was not found on your local network!"/>
            <TextBlock Margin="0,15,0,0">
                <Span xml:space="preserve">Please <Hyperlink Click="NavigateToHubSettings">review the hub information</Hyperlink></Span>
                .</TextBlock>
        </StackPanel>

        <!-- List of Channels -->
        <ListView
            x:Name="ChannelListView"
            Visibility="{x:Bind settingsViewModel.IsHubFound, Mode=OneWay}"
            Grid.Row="2"
            Margin="5,0,5,2"
            EntranceNavigationTransitionInfo.IsTargetElement="True"
            IsItemClickEnabled="True"
            ItemClick="OnItemClick"
            ItemsSource="{x:Bind hubChannelListViewModel.Items, Mode=OneWay}"
            SelectedItem="{x:Bind hubChannelListViewModel.SelectedItem, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.HorizontalScrollMode="Enabled"
            ItemContainerStyle="{StaticResource CustomListViewItemExpanded}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:HubChannelViewModel">
                    <Grid PointerEntered="{x:Bind PointerEntered}" PointerExited="{x:Bind PointerExited}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- - Canvas is necessary for PointerEntered/Exited to cover the whole item area -->
                        <Canvas
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent"/>
                        <Ellipse
                            x:Name="Ellipse"
                            Width="32"
                            Height="32"
                            Margin="6"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Fill="{ThemeResource HubChannelStampColor}"/>
                        <TextBlock
                            Text="{x:Bind DisplayId}"
                            Margin="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBlock
                            Grid.Column="1"
                            Text="{x:Bind DisplayName, Mode=OneWay}"
                            Style="{StaticResource BodyTextBlockStyle}"
                            TextWrapping="NoWrap"
                            VerticalAlignment="Center"
                            Margin="5,0,0,0"/>
                        <ctl:LoadController
                            x:Name="HubSceneController"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Margin="10"
                            win:ToolTipService.ToolTip="Turn load on or off"
                            x:Load="{x:Bind IsOnOffButtonShown, Mode=OneWay}"
                            IsSliderVisible="False"
                            LoadOnCommand="{x:Bind SceneOnCommand}"
                            LoadOffCommand="{x:Bind SceneOffCommand}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!-- Channel details -->
        <local:HubChannelView
            x:Name="HubChannelDetailsPresenter"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="1"
            Margin="10,0,10,20"
            BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}"
            Content="{x:Bind hubChannelListViewModel.PresentedItem, Mode=OneWay}"/>

        <!-- Footer -->
        <ctl:StatusBar
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Background="{ThemeResource AppBarBackgroundThemeBrush}"
            StatusText="{x:Bind StatusBarViewModel.StatusText, Mode=OneWay}"
            IsUserActionRequest="{x:Bind StatusBarViewModel.IsUserActionRequest, Mode=OneWay}"/>

        <!-- Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageSizeStatesGroup" CurrentStateChanged="OnCurrentStateChanged">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="960"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HubChannelDetailsPresenter.Visibility" Value="Visible"/>
                        <Setter Target="MasterColumn.Width" Value="400"/>
                        <Setter Target="DetailColumn.Width" Value="*"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HubChannelDetailsPresenter.Visibility" Value="Collapsed"/>
                        <Setter Target="MasterColumn.Width" Value="*"/>
                        <Setter Target="DetailColumn.Width" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="MasterDetailsStatesGroup">
                <VisualState x:Name="MasterState">
                    <VisualState.Setters>
                        <Setter Target="ChannelListView.SelectionMode" Value="None"/>
                        <Setter Target="ChannelListView.IsItemClickEnabled" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MasterDetailsState">
                    <VisualState.Setters>
                        <Setter Target="ChannelListView.SelectionMode" Value="Single"/>
                        <Setter Target="ChannelListView.IsItemClickEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</local:HubChannelListPageBase>
