<!--
    Copyright 2022 Christian Fortini
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<local:SceneListPageBase
    x:Class="UnoApp.Views.Scenes.SceneListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctl="using:UnoApp.Controls"
    xmlns:local="using:UnoApp.Views.Scenes"
    xmlns:utils="using:UnoApp.Utils"
    xmlns:dlg="using:UnoApp.Dialogs"
    xmlns:vm="using:ViewModel.Scenes"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <win:Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition/>
        </TransitionCollection>
    </win:Page.Transitions>

    <Grid VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MasterColumn" Width="400"/>
            <ColumnDefinition x:Name="DetailColumn" Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Navigation header -->
        <Grid ColumnSpan="2" MinHeight="45">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Text="{x:Bind PageHeaderProperty}"
                VerticalAlignment="Top"
                Margin="10,0,0,0"
                Style="{StaticResource TitleTextBlockStyle}"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center">
                <Button
                    Tag="AddScene"
                    win:ToolTipService.ToolTip="Add New Scene"
                    Margin="0,0,3,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}"
                    Click="AddSceneBtnClick">
                    <SymbolIcon Symbol="Add"/>
                </Button>
                <Button
                    Tag="RemoveScene"
                    Visibility="{x:Bind sceneListViewModel.IsItemPresented, Mode=OneWay}"
                    win:ToolTipService.ToolTip="Remove Scene"
                    Margin="0,0,3,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}"
                    Click="RemoveSceneBtnClick">
                    <SymbolIcon Symbol="Delete"/>
                </Button>
                <Button
                    Tag="More"
                    Visibility="{x:Bind sceneListViewModel.IsItemPresented, Mode=OneWay}"
                    win:ToolTipService.ToolTip="More Options"
                    Margin="0,0,3,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}">
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyoutItem Text="Check and Update Scene" Click="{x:Bind sceneListViewModel.PresentedItem.ExpandScene_Click}"/>
                            <MenuFlyoutItem Text="Remove Stale Members" Click="{x:Bind sceneListViewModel.PresentedItem.RemoveStaleMembers_Click}"/>
                            <MenuFlyoutItem Text="Remove Duplicate Members" Click="{x:Bind sceneListViewModel.PresentedItem.RemoveDuplicateMembers_Click}"/>
                            <MenuFlyoutSeparator/>
                            <MenuFlyoutItem Text="Update all Scenes" Click="{x:Bind sceneListViewModel.ExpandAllScenes}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="More"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Filter and sort -->
        <StackPanel
            Grid.Row="1"
            Margin="10,0,0,5"
            Orientation="Horizontal"
            HorizontalAlignment="Left">
            <TextBlock Margin="0,0,5,4" Text="Room: " VerticalAlignment="Center"/>
            <ctl:ValueComboBox
                Margin="0,2,10,4"
                VerticalAlignment="Center"
                ItemsSource="{x:Bind sceneListViewModel.Rooms, Mode=OneWay}"
                Value="{x:Bind sceneListViewModel.RoomFilter, Mode=TwoWay}"/>
            <TextBlock Margin="0,0,5,4" Text="Sort by: " VerticalAlignment="Center"/>
            <ComboBox
                Margin="0,2,0,0"
                VerticalAlignment="Center"
                x:Name="SortOrderComboBox"
                ItemsSource="{x:Bind sceneListViewModel.SortOrders}"
                SelectedItem="{x:Bind sceneListViewModel.SortOrder, Mode=TwoWay}"
                BorderThickness="0"/>
        </StackPanel>

        <!-- No scene to show -->
        <StackPanel
            x:Name="EmptyListView"
            x:Load="{x:Bind sceneListViewModel.IsViewEmpty, Mode=OneWay}"
            Grid.Row="2"
            Margin="10,15,10,0">
            <!-- No device at all in the model -->
            <StackPanel x:Name="NoDevice" x:Load="{x:Bind sceneListViewModel.HasNoScene, Mode=OneWay}">
                <TextBlock TextWrapping="Wrap" Text="There is no scene to show here yet! "/>
                <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" Text="You can create a new scene by tapping:"/>
                <Button
                    Tag="AddScene"
                    win:ToolTipService.ToolTip="Add Scene"
                    Margin="0,4,0,0"
                    Style="{ThemeResource SplitViewPaneButtonStyle}"
                    Click="AddSceneBtnClick">
                    <SymbolIcon Symbol="Add"/>
                </Button>
                <TextBlock TextWrapping="Wrap">either here or at top right of this page.</TextBlock>
            </StackPanel>
            <!-- No device matching current filtering -->
            <StackPanel x:Name="NoMatchingDevice" x:Load="{x:Bind sceneListViewModel.HasNoScene, Converter={StaticResource BoolNegation}, Mode=OneWay}">
                <TextBlock TextWrapping="Wrap" Text="No scene were found in that room!"/>
            </StackPanel>
        </StackPanel>

        <!-- List of scenes -->
        <ListView
            x:Name="SceneListView"
            Visibility="{x:Bind sceneListViewModel.IsViewEmpty, Converter={StaticResource VisibilityNegation}, Mode=OneWay}"
            Grid.Row="2"
            Margin="5,0,5,2"
            EntranceNavigationTransitionInfo.IsTargetElement="True"
            IsItemClickEnabled="True"
            ItemClick="OnItemClick"
            ItemsSource="{x:Bind sceneListViewModel.Items, Mode=OneWay}"
            SelectedItem="{x:Bind sceneListViewModel.SelectedItem, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.HorizontalScrollMode="Enabled"
            ItemContainerStyle="{StaticResource CustomListViewItemExpanded}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:SceneViewModel">
                    <Grid PointerEntered="{x:Bind PointerEntered}" PointerExited="{x:Bind PointerExited}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- - Canvas is necessary for PointerEntered/Exited to cover the whole item area -->
                        <Canvas
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent"/>
                        <Ellipse
                            x:Name="Ellipse"
                            Width="32"
                            Height="32"
                            Margin="6"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Fill="{ThemeResource SceneStampColor}"/>
                        <TextBlock
                            Text="{x:Bind DisplayId}"
                            Margin="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource BodyTextBlockStyle}"/>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="6,0,0,0">
                            <TextBlock
                                Text="{x:Bind DisplayName, Mode=OneWay}"
                                Style="{StaticResource BodyTextBlockStyle}"
                                FontWeight="Bold"
                                TextWrapping="NoWrap"
                                VerticalAlignment="Center"/>
                            <TextBlock
                                Text="{x:Bind Room, Mode=OneWay}"
                                Style="{StaticResource BodyTextBlockStyle}"
                                TextWrapping="NoWrap"
                                VerticalAlignment="Center"/>
                        </StackPanel>
                        <!--
                            Using Visibility instead of x:Load for LoadController as x:Load appears to prevent
                            LightOn and LightOff events to be set when using Uno (Works on WinUI)
                        -->
                        <ctl:LoadController
                            x:Name="SceneController"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Margin="10"
                            win:ToolTipService.ToolTip="Turn scene on or off"
                            Visibility="{x:Bind IsOnOffButtonShown, Mode=OneWay}"
                            IsSliderVisible="False"
                            LoadFullOn="{x:Bind SceneFullOn}"
                            LoadOff="{x:Bind SceneOff}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!-- Scene detail -->
        <local:SceneView
            x:Name="SceneDetailsPresenter"
            Grid.Row="1"
            Grid.Column="1"
            Grid.RowSpan="2"
            Margin="10,0,10,20"
            Content="{x:Bind sceneListViewModel.PresentedItem, Mode=OneWay}"/>

        <!-- Footer -->
        <ctl:StatusBar
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Background="{ThemeResource AppBarBackgroundThemeBrush}"
            StatusText="{x:Bind StatusBarViewModel.StatusText, Mode=OneWay}"
            IsUserActionRequest="{x:Bind StatusBarViewModel.IsUserActionRequest, Mode=OneWay}"/>

        <!-- Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageSizeStatesGroup" CurrentStateChanged="OnCurrentStateChanged">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="960"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SceneDetailsPresenter.Visibility" Value="Visible"/>
                        <Setter Target="MasterColumn.Width" Value="400"/>
                        <Setter Target="DetailColumn.Width" Value="*"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SceneDetailsPresenter.Visibility" Value="Collapsed"/>
                        <Setter Target="MasterColumn.Width" Value="*"/>
                        <Setter Target="DetailColumn.Width" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="MasterDetailsStatesGroup">
                <VisualState x:Name="MasterState">
                    <VisualState.Setters>
                        <Setter Target="SceneListView.SelectionMode" Value="None"/>
                        <Setter Target="SceneListView.IsItemClickEnabled" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MasterDetailsState">
                    <VisualState.Setters>
                        <Setter Target="SceneListView.SelectionMode" Value="Single"/>
                        <Setter Target="SceneListView.IsItemClickEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>


</local:SceneListPageBase>
