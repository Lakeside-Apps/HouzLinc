<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ctl="using:UnoApp.Controls">

    <ResourceDictionary.ThemeDictionaries>

        <ResourceDictionary x:Key="Light">
            <!-- Device/scene ListView -->
            <SolidColorBrush x:Key="ListViewItemBackground" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="#FFE0E0E0"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundPointerOver" Color="#FFE8E8E8"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="#FFE8E8E8"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundPressed" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="#FFEAEAEA"/>

            <!-- Link/scene member GridView -->
            <SolidColorBrush x:Key="GridViewItemBackground" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="GridViewItemBackgroundSelected" Color="#FFE0E0E0"/>
            <SolidColorBrush x:Key="GridViewItemBackgroundPointerOver" Color="#FFE8E8E8"/>
            <SolidColorBrush x:Key="GridViewItemBackgroundSelectedPointerOver" Color="#FFE8E8E8"/>
            <SolidColorBrush x:Key="GridViewItemBackgroundPressed" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="GridViewItemBackgroundSelectedPressed" Color="#FFEAEAEA"/>

            <!-- For these GridView resources that are not present in generic.xaml: use the ListView values -->
            <StaticResource x:Key="GridViewItemBorderBackground" ResourceKey="ListViewItemBorderBackground"/>
            <StaticResource x:Key="GridViewItemPlaceholderBackground" ResourceKey="ListViewItemPlaceholderBackground"/>
            <StaticResource x:Key="GridViewItemForegroundPressed" ResourceKey="ListViewItemForegroundPressed"/>
            <StaticResource x:Key="GridViewItemForegroundSelected" ResourceKey="ListViewItemForegroundSelected"/>
            <StaticResource x:Key="GridViewItemForegroundSelectedPointerOver" ResourceKey="ListViewItemForegroundSelectedPointerOver"/>
            <StaticResource x:Key="GridViewItemForegroundSelectedPressed" ResourceKey="ListViewItemForegroundSelectedPressed"/>

            <!-- Item Stamp Colors - Toned down palette -->
            <SolidColorBrush x:Key="DeviceStampColor" Color="#FF6B9BD1"/>
            <SolidColorBrush x:Key="ResponderLinkStampColor" Color="#FF5A8FBA"/>
            <SolidColorBrush x:Key="ControllerLinkStampColor" Color="#FF7BB8D3"/>
            <SolidColorBrush x:Key="HubChannelStampColor" Color="#FF9F7FB8"/>
            <SolidColorBrush x:Key="HubChannelMemberStampColor" Color="#FF9370B3"/>
            <SolidColorBrush x:Key="SceneStampColor" Color="#FFCC8B56"/>
            <SolidColorBrush x:Key="SceneMemberStampColor" Color="#FF6BA3CD"/>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">
            <!-- Device/scene ListView" use values from generic.xaml -->

            <!-- Link/scene member GridView: use values from generic.xaml -->
            <!-- Except for these GridView resources that are not present in generic.xaml: use the ListView values -->
            <StaticResource x:Key="GridViewItemBorderBackground" ResourceKey="ListViewItemBorderBackground"/>
            <StaticResource x:Key="GridViewItemPlaceholderBackground" ResourceKey="ListViewItemPlaceholderBackground"/>
            <StaticResource x:Key="GridViewItemForegroundPressed" ResourceKey="ListViewItemForegroundPressed"/>
            <StaticResource x:Key="GridViewItemForegroundSelected" ResourceKey="ListViewItemForegroundSelected"/>
            <StaticResource x:Key="GridViewItemForegroundSelectedPointerOver" ResourceKey="ListViewItemForegroundSelectedPointerOver"/>
            <StaticResource x:Key="GridViewItemForegroundSelectedPressed" ResourceKey="ListViewItemForegroundSelectedPressed"/>

            <!-- Item Stamp Colors - Toned down palette (dark mode) -->
            <SolidColorBrush x:Key="DeviceStampColor" Color="#FF7BB8D3"/>
            <SolidColorBrush x:Key="ResponderLinkStampColor" Color="#FF6BA3CD"/>
            <SolidColorBrush x:Key="ControllerLinkStampColor" Color="#FF9BCAE0"/>
            <SolidColorBrush x:Key="HubChannelStampColor" Color="#FFB396C7"/>
            <SolidColorBrush x:Key="SceneStampColor" Color="#FFD4A574"/>
            <SolidColorBrush x:Key="SceneMemberStampColor" Color="#FF9BCAE0"/>
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <!-- Device/scene ListView" use values from generic.xaml -->

            <!-- Link/scene member GridView: use values from generic.xaml -->
            <!-- Except for these GridView resources that are not present in generic.xaml: use the ListView values -->
            <StaticResource x:Key="GridViewItemBorderBackground" ResourceKey="ListViewItemBorderBackground"/>
            <StaticResource x:Key="GridViewItemMultiArrangeOverlayTextBackground" ResourceKey="ListViewItemMultiArrangeOverlayTextBackground"/>
            <StaticResource x:Key="GridViewItemForegroundPressed" ResourceKey="ListViewItemForegroundPressed"/>
            <StaticResource x:Key="GridViewItemForegroundSelected" ResourceKey="ListViewItemForegroundSelected"/>
            <StaticResource x:Key="GridViewItemForegroundSelectedPointerOver" ResourceKey="ListViewItemForegroundSelectedPointerOver"/>
            <StaticResource x:Key="GridViewItemForegroundSelectedPressed" ResourceKey="ListViewItemForegroundSelectedPressed"/>

            <!-- Item Stamp Colors - High contrast remains strong for accessibility -->
            <SolidColorBrush x:Key="DeviceStampColor" Color="#FF0078D4"/>
            <SolidColorBrush x:Key="ResponderLinkStampColor" Color="#FF004578"/>
            <SolidColorBrush x:Key="ControllerLinkStampColor" Color="#FF40E0D0"/>
            <SolidColorBrush x:Key="HubChannelStampColor" Color="#FF8764B8"/>
            <SolidColorBrush x:Key="HubChannelMemberStampColor" Color="#FF744DA9"/>
            <SolidColorBrush x:Key="SceneStampColor" Color="#FFFF8C00"/>
            <SolidColorBrush x:Key="SceneMemberStampColor" Color="#FF0078D4"/>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <SolidColorBrush x:Key="SplitViewLightDismissOverlayBackground" Opacity="0.6" Color="{ThemeResource SystemChromeLowColor}"/>

    <!-- window width adaptive snap points -->
    <x:Double x:Key="MinWindowSnapPoint">0</x:Double>
    <x:Double x:Key="MediumWindowSnapPoint">641</x:Double>
    <x:Double x:Key="LargeWindowSnapPoint">1008</x:Double>

    <!-- padding between window title bar and content -->
    <x:Double x:Key="DesktopWindowTopPadding">12</x:Double>

    <!-- ListView item template for devices and scenes -->
    <!--
        ListViewItemPresenter is not currently implemented in Uno
        So instead of using CustomListViewItemStyle we use the expanded version (CustomListItemExpanded) defined below.
        It is more verbose and likely slower but that's all we have on Uno at the moment.
        https://github.com/unoplatform/uno/issues/7582
    -->
    <!--
    <Style x:Key="CustomListViewItemStyle" BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
        <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MaxWidth" Value="420"/>
        <Setter Property="MinHeight" Value="72"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ListViewItemPresenter
                        x:Name="Root"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Background="{TemplateBinding Background}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Control.IsTemplateFocusTarget="True"
                        CornerRadius="10"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                        PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                        SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                        SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <!-- Gridview item template for links and scene members -->
    <!-- See comment re. ListView above. Same limitations for GridView -->
    <!--
    <Style x:Key="CustomGridViewItemStyle" BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
        <Setter Property="Background" Value="{ThemeResource GridViewItemBackground}"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="MinWidth" Value="230"/>
        <Setter Property="MaxWidth" Value="460"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewItem">
                    <ListViewItemPresenter
                        x:Name="Root"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Background="{TemplateBinding Background}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Control.IsTemplateFocusTarget="True"
                        CornerRadius="10"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}"
                        PressedBackground="{ThemeResource GridViewItemBackgroundPressed}"
                        SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                        SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <Style TargetType="ListViewItem" x:Key="CustomListViewItemExpanded">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
        <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MaxWidth" Value="420"/>
        <Setter Property="MinHeight" Value="72"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="FocusVisualMargin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid
                        x:Name="ContentBorder"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Rectangle
                            x:Name="BorderBackground"
                            IsHitTestVisible="False"
                            Fill="{ThemeResource ListViewItemBorderBackground}"
                            Opacity="0"
                            Control.IsTemplateFocusTarget="True"/>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                        <!--
                            The 'Xg' text simulates the amount of space one line of text will occupy.
                            In the DataPlaceholder state, the Content is not loaded yet so we
                            approximate the size of the item using placeholder text.
                        -->
                        <TextBlock
                            x:Name="PlaceholderTextBlock"
                            Opacity="0"
                            Text="Xg"
                            Foreground="{x:Null}"
                            Margin="{TemplateBinding Padding}"
                            IsHitTestVisible="False"
                            AutomationProperties.AccessibilityView="Raw"/>
                        <Rectangle x:Name="PlaceholderRect" Visibility="Collapsed" Fill="{ThemeResource ListViewItemPlaceholderBackground}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemBackgroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemForegroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemBackgroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemForegroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemBackgroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemForegroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOverSelected">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemForegroundSelectedPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemBackgroundSelectedPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListViewItemForegroundSelectedPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>

                                <VisualState x:Name="DataPlaceholder">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GridViewItem" x:Key="CustomGridViewItemExpanded">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Background" Value="{ThemeResource GridViewItemBackground}"/>
        <Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,6,12,6"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="230"/>
        <Setter Property="MaxWidth" Value="460"/>
        <Setter Property="MinHeight" Value="72"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="FocusVisualMargin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewItem">
                    <Grid
                        x:Name="ContentBorder"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Rectangle
                            x:Name="BorderBackground"
                            IsHitTestVisible="False"
                            Fill="{ThemeResource GridViewItemBorderBackground}"
                            Opacity="0"
                            Control.IsTemplateFocusTarget="True"/>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                        <!--
                            The 'Xg' text simulates the amount of space one line of text will occupy.
                            In the DataPlaceholder state, the Content is not loaded yet so we
                            approximate the size of the item using placeholder text.
                        -->
                        <TextBlock
                            x:Name="PlaceholderTextBlock"
                            Opacity="0"
                            Text="Xg"
                            Foreground="{x:Null}"
                            Margin="{TemplateBinding Padding}"
                            IsHitTestVisible="False"
                            AutomationProperties.AccessibilityView="Raw"/>
                        <Rectangle x:Name="PlaceholderRect" Visibility="Collapsed" Fill="{ThemeResource GridViewItemPlaceholderBackground}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemBackgroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemForegroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemBackgroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemForegroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemBackgroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemForegroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOverSelected">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemForegroundSelectedPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">

                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0"
                                            To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemBackgroundSelectedPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource GridViewItemForegroundSelectedPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>

                                <VisualState x:Name="DataPlaceholder">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SplitViewTogglePaneButtonStyle" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="Content" Value="&#xE700;"/>
        <Setter Property="AutomationProperties.Name" Value="Navigation"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="FocusVisualMargin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Content="{TemplateBinding Content}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="CheckedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(ContentPresenter.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SplitViewPaneButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="FocusVisualMargin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            AutomationProperties.AccessibilityView="Raw"
                            Padding="{TemplateBinding Padding}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Content="{TemplateBinding Content}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentPresenter.Foreground)" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseEditableTextBlockStyle" TargetType="ctl:EditableTextBlock">
        <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TitleEditableTextBlockStyle" TargetType="ctl:EditableTextBlock" BasedOn="{StaticResource BaseEditableTextBlockStyle}">
        <Setter Property="FontWeight" Value="SemiLight"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="PageTitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TitleTextBlockStyle}">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="24,4,0,0"/>
    </Style>

    <Style x:Key="NarrowPageTitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource PageTitleTextBlockStyle}">
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>

</ResourceDictionary>
