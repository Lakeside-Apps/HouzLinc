<Page
    x:Name="RootPage"
    x:Class="UnoApp.AppShell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UnoApp"
    xmlns:controls="using:UnoApp.Controls"
    xmlns:utils="using:UnoApp.Utils"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:android="http://uno.ui/android"
    xmlns:ios="http://uno.ui/ios"
    xmlns:wasm="http://uno.ui/wasm"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    mc:Ignorable="d android ios wasm"
    KeyDown="AppShell_KeyDown"
    TabNavigation="Cycle"
    HighContrastAdjustment="None">

    <!--
        Using a Page as the root for the app provides a design time experience as well as ensures that
        when it runs on Mobile the app content won't appear under the system's StatusBar which is visible
        by default with a transparent background.  It will also take into account the presence of software
        navigation buttons if they appear on a device.  An app can opt-out by switching to UseCoreWindow.
    -->

    <Page.Resources>
        <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="local:NavMenuItem">
            <NavigationViewItem Content="{x:Bind Label}" win:ToolTipService.ToolTip="{x:Bind Tooltip}" Tag="{x:Bind Tag}">
                <NavigationViewItem.Icon>
                    <FontIcon Glyph="{x:Bind Glyph, Mode=OneTime}"/>
                </NavigationViewItem.Icon>
            </NavigationViewItem>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border
            x:Name="AppTitleBar"
            Height="{x:Bind TitleBarHeight, Mode=OneWay}"
            VerticalAlignment="Top"
            Canvas.ZIndex="1"
            IsHitTestVisible="True">
            <StackPanel Orientation="Horizontal">
                <Image Width="30" Source="Assets/Images/houzlinc.png" Margin="16,0,0,0"/>
                <TextBlock
                    x:Name="AppTitle"
                    Margin="16,0,0,0"
                    VerticalAlignment="Center"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind AppTitleText}"/>
            </StackPanel>
        </Border>

        <!-- Shown until we have data to show -->
        <Grid
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            x:Name="SplashView"
            x:Load="{x:Bind SplashMode, Mode=OneWay}">
            <StackPanel>
                <TextBlock
                    Text="Loading House Configuration."
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    FontWeight="Normal"
                    Margin="0,0,0,5"/>
                <ProgressBar Margin="10,2,10,0" HorizontalAlignment="Stretch" IsIndeterminate="True"/>
            </StackPanel>
        </Grid>

        <!-- Top-level navigation menu + app content -->
        <!--
            x:Load on NavigationView does not prevent the Frame from loading,
            hence the need for the Grid container
        -->
        <Grid Grid.RowSpan="2" x:Name="NavViewContainer" x:Load="{x:Bind SplashMode, Converter={StaticResource BoolNegation}, Mode=OneWay}">
            <NavigationView
                x:Name="NavView"
                MenuItemsSource="{x:Bind NavMenuItems, Mode=OneWay}"
                FooterMenuItemsSource="{x:Bind FooterNavMenuItems, Mode=OneWay}"
                MenuItemTemplate="{StaticResource NavMenuItemTemplate}"
                Canvas.ZIndex="0"
                win:IsTitleBarAutoPaddingEnabled="True"
                IsTabStop="False"
                IsSettingsVisible="False"
                IsBackButtonVisible="Visible"
                NavigationView.OpenPaneLength="170"
                CompactModeThresholdWidth="{StaticResource CompactModeThresholdWidth}"
                Loaded="NavView_Loaded"
                ItemInvoked="NavView_ItemInvoked"
                BackRequested="NavView_BackRequested">
                <Frame x:Name="ContentFrame" IsTabStop="False" NavigationFailed="ContentFrame_NavigationFailed"/>
            </NavigationView>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="TitleBarStates">
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{x:Bind NavView.CompactModeThresholdWidth}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AppTitleBar.Margin" Value="34,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AppTitleBar.Margin" Value="76,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
