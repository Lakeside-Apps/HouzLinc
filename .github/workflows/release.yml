name: Build and Release

# This builds the project for Windows and Android, then creates a GitHub release
# with the built artifacts whenever:
# - a tag matching 'v*' is pushed in any branch, or
# - a branch matching 'release-v*' is pushed.

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'release-v*'

permissions:
  contents: write  # Required to create releases
  packages: read   # May be needed for some operations

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install uno-check
        run: dotnet tool install --global uno.check

      - name: Run uno-check
        run: uno-check --ci --non-interactive --fix --skip xcode --skip androidsdk --skip androidemulator
        continue-on-error: true

      - name: Restore .NET workloads
        run: dotnet workload restore
        working-directory: UnoApp

      - name: Restore packages
        run: msbuild /r /t:Restore /p:Configuration=Release /p:PublishReadyToRun=true
        working-directory: UnoApp

      - name: Build Windows MSIX package
        run: msbuild /p:TargetFramework=net9.0-windows10.0.26100 /p:Configuration=Release /p:Platform=x64 /p:RuntimeIdentifier=win-x64 /p:PublishUnsignedPackage=true /p:AppxPackageDir="./publish/"
        working-directory: UnoApp

      - name: Prepare and rename artifact
        run: |
          # Create staging directory
          New-Item -ItemType Directory -Path "./artifacts" -Force
          
          # Find the generated MSIX file(s)
          $msixFiles = Get-ChildItem -Path "./publish" -Recurse -Include "*.msix"
          if ($msixFiles.Count -eq 0) {
            Write-Host "No MSIX files found!"
            exit 1
          }
          
          # Copy and rename: replace "UnoApp" with "HouzLinc" in filename
          foreach ($sourceFile in $msixFiles) {
            $originalName = $sourceFile.Name
            $newFileName = $originalName -replace "UnoApp", "HouzLinc"
            $destPath = "./artifacts/$newFileName"
            
            Write-Host "Renaming '$originalName' to '$newFileName'"
            Copy-Item $sourceFile.FullName -Destination $destPath
          }
          
          # Show what we created
          Write-Host "Created artifacts:"
          Get-ChildItem "./artifacts" | Format-Table Name, Length
        working-directory: UnoApp
        shell: pwsh

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: HouzLinc-Windows
          path: UnoApp/artifacts/*.msix

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install uno-check
        run: dotnet tool install --global uno.check

      - name: Run uno-check
        run: uno-check --ci --non-interactive --fix --skip xcode --skip winui --skip winsdk --skip vswin --skip vsmac
        continue-on-error: true

      - name: Restore .NET workloads
        run: dotnet workload restore
        working-directory: UnoApp

      - name: Build and publish Android APK
        run: dotnet publish -f net9.0-android -c Release -o ./publish
        working-directory: UnoApp

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: HouzLinc-Android
          path: UnoApp/publish/*.apk

  create-release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # Only create release for tags
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: HouzLinc-Windows
          path: ./artifacts/windows

      - name: Download Android artifact
        uses: actions/download-artifact@v4
        with:
          name: HouzLinc-Android
          path: ./artifacts/android

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/windows/*.msix
            ./artifacts/android/*.apk
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
